#define SHIFT_DATA 2
#define SHIFT_CLK 3
#define SHIFT_LATCH 4
#define EEPROM_D0 5
#define EEPROM_D7 12
#define WRITE_EN 13

/*
 * Output the address bits and outputEnable signal using shift registers.
 */
void setAddress(int address, bool outputEnable) {
  shiftOut(SHIFT_DATA, SHIFT_CLK, MSBFIRST, (address >> 8) | (outputEnable ? 0x00 : 0x80));
  shiftOut(SHIFT_DATA, SHIFT_CLK, MSBFIRST, address);

  digitalWrite(SHIFT_LATCH, LOW);
  digitalWrite(SHIFT_LATCH, HIGH);
  digitalWrite(SHIFT_LATCH, LOW);
}


/*
 * Read a byte from the EEPROM at the specified address.
 */
byte readEEPROM(int address) {
  for (int pin = EEPROM_D0; pin <= EEPROM_D7; pin += 1) {
    pinMode(pin, INPUT);
  }
  setAddress(address, /*outputEnable*/ true);

  byte data = 0;
  for (int pin = EEPROM_D7; pin >= EEPROM_D0; pin -= 1) {
    data = (data << 1) + digitalRead(pin);
  }
  return data;
}


/*
 * Write a byte to the EEPROM at the specified address.
 */
void writeEEPROM(int address, byte data) {
  setAddress(address, /*outputEnable*/ false);
  for (int pin = EEPROM_D0; pin <= EEPROM_D7; pin += 1) {
    pinMode(pin, OUTPUT);
  }

  for (int pin = EEPROM_D0; pin <= EEPROM_D7; pin += 1) {
    digitalWrite(pin, data & 1);
    data = data >> 1;
  }
  digitalWrite(WRITE_EN, LOW);
  delayMicroseconds(1);
  digitalWrite(WRITE_EN, HIGH);
  delay(10);
}


/*
 * Read the contents of the EEPROM and print them to the serial monitor.
 */
void printContents() {
  for (int base = 0; base <= 2047; base += 16) {
    byte data[16];
    for (int offset = 0; offset <= 15; offset += 1) {
      data[offset] = readEEPROM(base + offset);
    }

    char buf[80];
    sprintf(buf, "%03x:  %02x %02x %02x %02x %02x %02x %02x %02x   %02x %02x %02x %02x %02x %02x %02x %02x",
            base, data[0], data[1], data[2], data[3], data[4], data[5], data[6], data[7],
            data[8], data[9], data[10], data[11], data[12], data[13], data[14], data[15]);

    Serial.println(buf);
  }
}


// 4-bit hex decoder for common anode 7-segment display
//byte data[] = { 0x81, 0xcf, 0x92, 0x86, 0xcc, 0xa4, 0xa0, 0x8f, 0x80, 0x84, 0x88, 0xe0, 0xb1, 0xc2, 0xb0, 0xb8 };
// 4-bit hex decoder for common cathode 7-segment display
// byte data[] = { 0x7e, 0x30, 0x6d, 0x79, 0x33, 0x5b, 0x5f, 0x70, 0x7f, 0x7b, 0x77, 0x1f, 0x4e, 0x3d, 0x4f, 0x47 };
const byte data[] PROGMEM = {
  0xA2, 0x20, 0xA2, 0x00, 0xA2, 0x03, 0xC9, 0x00, 0xB0, 0x15, 0x38, 0xB0,
  0x01, 0x18, 0xA2, 0x05, 0x7E, 0x73, 0x04, 0x18, 0xA9, 0xC5, 0x8D, 0xF8,
  0x07, 0xAD, 0xFF, 0xCF, 0x4C, 0xDF, 0xCD, 0xA2, 0x05, 0x86, 0x58, 0xA9,
  0xC5, 0x8D, 0xF8, 0x07, 0x20, 0x57, 0xC5, 0xA0, 0x05, 0xB9, 0x61, 0xC5,
  0x99, 0x42, 0x00, 0x88, 0x10, 0xF7, 0x18, 0xA2, 0x05, 0x7E, 0x73, 0x04,
  0x20, 0x0A, 0xC5, 0xB0, 0x15, 0xAE, 0x00, 0x08, 0xCA, 0xD0, 0x0F, 0xAE,
  0x01, 0x08, 0xF0, 0x0A, 0xA5, 0x58, 0x0A, 0x0A, 0x0A, 0x0A, 0xAA, 0x4C,
  0x01, 0x08, 0x60, 0x20, 0x0D, 0xC5, 0x05, 0x5E, 0xC5, 0x60, 0x01, 0x00,
  0x60, 0x01, 0x50, 0x00, 0x08, 0x00, 0x00, 0xC0, 0xC1, 0xC3, 0xFF, 0xFC,
  0xF3, 0xCF, 0x3F, 0x20, 0xAE, 0xCA, 0xA5, 0x55, 0x48, 0xA9, 0x00, 0xA6,
  0x4E, 0xF0, 0x16, 0xBC, 0x82, 0xCC, 0x51, 0x54, 0x51, 0x56, 0x88, 0xD0,
  0xF9, 0x51, 0x54, 0x51, 0x56, 0xE0, 0x01, 0xF0, 0x02, 0xE6, 0x55, 0xE6,
  0x55, 0xA4, 0x4D, 0xF0, 0x09, 0x51, 0x54, 0x51, 0x54, 0x88, 0xD0, 0xFB,
  0x51, 0x54, 0x85, 0x40, 0x68, 0x85, 0x55, 0xA4, 0x4C, 0x88, 0xA9, 0x00,
  0x85, 0x59, 0xB1, 0x54, 0x0A, 0x66, 0x59, 0x88, 0x10, 0xF8, 0x38, 0x66,
  0x59, 0xA5, 0x4C, 0x18, 0x65, 0x54, 0x85, 0x56, 0xA5, 0x55, 0x69, 0x00,
  0x85, 0x57, 0xA0, 0x06, 0x38, 0xB1, 0x56, 0x99, 0x4D, 0x00, 0x30, 0x01,
  0x18, 0x66, 0x41, 0x88, 0x10, 0xF2, 0x38, 0x66, 0x41, 0xA5, 0x56, 0x18,
  0x69, 0x07, 0x85, 0x56, 0x90, 0x02, 0xE6, 0x57, 0x60, 0x03, 0x03, 0x83,
  0x01, 0x83, 0x01, 0x01, 0x01, 0x03, 0x83, 0x00, 0x24, 0x49, 0x00, 0x04,
  0x01, 0x00, 0x01, 0x02, 0x04, 0x09, 0x12, 0x00, 0x01, 0x02, 0x04, 0x00,
  0x00, 0x00, 0xBF, 0x0A, 0x38, 0x4C, 0x62, 0xCA, 0xA9, 0x80, 0x85, 0x40,
  0xA5, 0x54, 0x85, 0x56, 0xA5, 0x55, 0x85, 0x57, 0x20, 0x85, 0xCC, 0xBD,
  0x8D, 0xC0, 0xBD, 0x8E, 0xC0, 0x10, 0xFB, 0xBD, 0x81, 0xC0, 0xA0, 0x1E,
  0xBD, 0x8C, 0xC0, 0x10, 0xFB, 0x88, 0x30, 0xD8, 0xC9, 0xC3, 0xD0, 0xF4,
  0xA0, 0x00, 0xA2, 0x05, 0xAD, 0xEC, 0xC0, 0x10, 0xFB, 0x29, 0x7F, 0x95,
  0x4C, 0x45, 0x40, 0x85, 0x40, 0xCA, 0x10, 0xF0, 0xA6, 0x4C, 0x18, 0xAD,
  0xEC, 0xC0, 0x10, 0xFB, 0x29, 0x7F, 0x85, 0x4B, 0x8A, 0xF0, 0x2F, 0x65,
  0x54, 0x85, 0x56, 0x90, 0x02, 0xE6, 0x57, 0xAD, 0xEC, 0xC0, 0x10, 0xFB,
  0x0A, 0x85, 0x41, 0xA5, 0x4B, 0x48, 0xD0, 0x21, 0xAD, 0xEC, 0xC0, 0x10,
  0xFB, 0x06, 0x41, 0xB0, 0x02, 0x49, 0x80, 0x91, 0x54, 0xC8, 0xC4, 0x4C,
  0x90, 0xEE, 0xAD, 0xEC, 0xC0, 0x10, 0xFB, 0x4C, 0x2D, 0xCA, 0xA5, 0x4B,
  0x48, 0xF0, 0xF3, 0xD0, 0x14, 0xAD, 0xEC, 0xC0, 0x10, 0xFB, 0x06, 0x41,
  0xB0, 0x02, 0x49, 0x80, 0x91, 0x54, 0xC8, 0xC4, 0x4C, 0x90, 0xEE, 0xA0,
  0x00, 0xAD, 0xEC, 0xC0, 0x10, 0xFB, 0xAA, 0x29, 0x07, 0x85, 0x59, 0x8A,
  0x4A, 0x4A, 0x4A, 0x29, 0x0F, 0xAA, 0xAD, 0xEC, 0xC0, 0x10, 0xFB, 0x5D,
  0x6E, 0xCA, 0x91, 0x56, 0x45, 0x40, 0x85, 0x40, 0xC8, 0xD0, 0x02, 0xE6,
  0x57, 0xAD, 0xEC, 0xC0, 0x10, 0xFB, 0x5D, 0x7E, 0xCA, 0x91, 0x56, 0x45,
  0x40, 0x85, 0x40, 0xC8, 0xEA, 0xAD, 0xEC, 0xC0, 0x10, 0xFB, 0x5D, 0x8E,
  0xCA, 0x91, 0x56, 0x45, 0x40, 0x85, 0x40, 0xC8, 0xEA, 0xAD, 0xEC, 0xC0,
  0x10, 0xFB, 0x5D, 0x9E, 0xCA, 0x91, 0x56, 0x45, 0x40, 0x85, 0x40, 0xC8,
  0xD0, 0x02, 0xE6, 0x57, 0xAD, 0xEC, 0xC0, 0x10, 0xFB, 0xA6, 0x59, 0x5D,
  0x7E, 0xCA, 0x91, 0x56, 0x45, 0x40, 0x85, 0x40, 0xC8, 0xAD, 0xEC, 0xC0,
  0x10, 0xFB, 0x5D, 0x8E, 0xCA, 0x91, 0x56, 0x45, 0x40, 0x85, 0x40, 0xC8,
  0xC6, 0x4B, 0xAD, 0xEC, 0xC0, 0x10, 0xFB, 0x5D, 0x9E, 0xCA, 0x91, 0x56,
  0x45, 0x40, 0x85, 0x40, 0xA5, 0x4B, 0xF0, 0x04, 0xC8, 0x4C, 0x99, 0xC9,
  0xAD, 0xEC, 0xC0, 0x10, 0xFB, 0x85, 0x59, 0x68, 0x85, 0x4B, 0x45, 0x40,
  0x85, 0x40, 0xAD, 0xEC, 0xC0, 0x10, 0xFB, 0x38, 0x2A, 0x25, 0x59, 0x45,
  0x40, 0xAC, 0xEC, 0xC0, 0x10, 0xFB, 0xC0, 0xC8, 0xD0, 0x1C, 0xA6, 0x4C,
  0xF0, 0x08, 0xA0, 0x00, 0x51, 0x54, 0xC8, 0xCA, 0xD0, 0xFA, 0xAA, 0xD0,
  0x11, 0xAD, 0xED, 0xC0, 0xAD, 0xEE, 0xC0, 0x30, 0xFB, 0x18, 0xAD, 0xE0,
  0xC0, 0x60, 0xA9, 0x20, 0xD0, 0x02, 0xA9, 0x10, 0x38, 0x60, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80,
  0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x00, 0x00, 0x80, 0x80,
  0x00, 0x00, 0x80, 0x80, 0x00, 0x00, 0x80, 0x80, 0x00, 0x00, 0x80, 0x00,
  0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00,
  0x80, 0x00, 0xA6, 0x4E, 0xF0, 0x17, 0xA5, 0x55, 0x85, 0x57, 0xA9, 0x80,
  0xE0, 0x01, 0xF0, 0x04, 0xE6, 0x57, 0xA9, 0x00, 0x18, 0x65, 0x54, 0x85,
  0x56, 0x90, 0x02, 0xE6, 0x57, 0xBD, 0xEB, 0xC5, 0x85, 0x4B, 0xBD, 0xEE,
  0xC5, 0x85, 0x4C, 0xA2, 0x05, 0xA5, 0x4D, 0x85, 0x59, 0x29, 0x07, 0xA8,
  0x06, 0x59, 0x90, 0x15, 0xBD, 0xF7, 0xC5, 0x18, 0x65, 0x4C, 0xC9, 0x07,
  0x90, 0x02, 0xE9, 0x07, 0x85, 0x4C, 0xBD, 0xF1, 0xC5, 0x65, 0x4B, 0x85,
  0x4B, 0xCA, 0x30, 0x06, 0xD0, 0xE2, 0x98, 0x18, 0x90, 0xE5, 0x60, 0x20,
  0x6F, 0xC5, 0x20, 0x85, 0xCC, 0xA5, 0x56, 0xF0, 0x02, 0xEA, 0x2C, 0xC6,
  0x57, 0xA0, 0x32, 0xBD, 0x8D, 0xC0, 0xBD, 0x8E, 0xC0, 0x30, 0x0A, 0x88,
  0xD0, 0xF8, 0x38, 0x4C, 0x7B, 0xCC, 0x4C, 0x44, 0xCC, 0xA0, 0x05, 0xBD,
  0x81, 0xC0, 0xA9, 0xFF, 0x9D, 0x8F, 0xC0, 0x1D, 0x8C, 0xC0, 0xD0, 0x03,
  0x20, 0x93, 0xCC, 0xB9, 0x69, 0xC5, 0x9D, 0x8D, 0xC0, 0xDD, 0x8C, 0xC0,
  0x88, 0x10, 0xF1, 0xA5, 0x5A, 0x09, 0x80, 0x20, 0x99, 0xCC, 0x20, 0x95,
  0xCC, 0xA5, 0x5B, 0x20, 0x9D, 0xCC, 0x20, 0x95, 0xCC, 0x20, 0x95, 0xCC,
  0xA5, 0x4C, 0x09, 0x80, 0x20, 0x9E, 0xCC, 0xA5, 0x4B, 0x09, 0x80, 0x20,
  0x9E, 0xCC, 0xA5, 0x4C, 0xF0, 0x1B, 0xA5, 0x59, 0xA0, 0xFF, 0xD0, 0x07,
  0xEA, 0xEA, 0xEA, 0xB1, 0x54, 0x09, 0x80, 0xEA, 0x9D, 0x8D, 0xC0, 0xDD,
  0x8C, 0xC0, 0xC8, 0xC4, 0x4C, 0x90, 0xED, 0x24, 0x41, 0xA5, 0x4B, 0xF0,
  0x99, 0xA4, 0x56, 0x88, 0xA9, 0x00, 0x85, 0x56, 0xA5, 0x41, 0x8D, 0xED,
  0xC0, 0xCD, 0xEC, 0xC0, 0xA5, 0x4D, 0x09, 0x80, 0xC8, 0xF0, 0x02, 0xEA,
  0x2C, 0xE6, 0x57, 0xEA, 0xEA, 0xEA, 0xA6, 0x4F, 0x8D, 0xED, 0xC0, 0xCD,
  0xEC, 0xC0, 0xB1, 0x56, 0x85, 0x4D, 0x0A, 0x2A, 0x09, 0x02, 0x85, 0x41,
  0xC8, 0xD0, 0x02, 0xE6, 0x57, 0xAD, 0x4E, 0x00, 0x09, 0x80, 0x8D, 0xED,
  0xC0, 0xCD, 0xEC, 0xC0, 0xB1, 0x56, 0x85, 0x4E, 0x0A, 0x26, 0x41, 0xC8,
  0xD0, 0x02, 0xE6, 0x57, 0x8A, 0x09, 0x80, 0x8D, 0xED, 0xC0, 0xCD, 0xEC,
  0xC0, 0xB1, 0x56, 0x85, 0x4F, 0x0A, 0x26, 0x41, 0xC8, 0xD0, 0x02, 0xE6,
  0x57, 0xA5, 0x50, 0x09, 0x80, 0xA6, 0x51, 0x8D, 0xED, 0xC0, 0xCD, 0xEC,
  0xC0, 0xB1, 0x56, 0x85, 0x50, 0x0A, 0x26, 0x41, 0xC8, 0xD0, 0x02, 0xE6,
  0x57, 0x8A, 0x09, 0x80, 0x8D, 0xED, 0xC0, 0xCD, 0xEC, 0xC0, 0xB1, 0x56,
  0x85, 0x51, 0x0A, 0x26, 0x41, 0xC8, 0xD0, 0x02, 0xE6, 0x57, 0xA5, 0x52,
  0x09, 0x80, 0xA6, 0x53, 0x8D, 0xED, 0xC0, 0xCD, 0xEC, 0xC0, 0xB1, 0x56,
  0x85, 0x52, 0x0A, 0x26, 0x41, 0xC8, 0xD0, 0x02, 0xE6, 0x57, 0x8A, 0x09,
  0x80, 0x8D, 0xED, 0xC0, 0xCD, 0xEC, 0xC0, 0xB1, 0x56, 0x85, 0x53, 0x0A,
  0xA5, 0x41, 0x2A, 0xC6, 0x4B, 0xF0, 0x05, 0x24, 0x41, 0x4C, 0x8E, 0xCB,
  0xA5, 0x40, 0x09, 0xAA, 0x8D, 0xED, 0xC0, 0xCD, 0xEC, 0xC0, 0xA2, 0x60,
  0xA5, 0x40, 0x4A, 0x09, 0xAA, 0x20, 0x99, 0xCC, 0xA9, 0xC8, 0x20, 0x9C,
  0xCC, 0x20, 0x92, 0xCC, 0xBD, 0x8E, 0xC0, 0xBD, 0x8C, 0xC0, 0xA0, 0x1A,
  0xBD, 0x8D, 0xC0, 0x88, 0xD0, 0x07, 0xA9, 0x01, 0xA2, 0x60, 0x38, 0xB0,
  0x06, 0xBD, 0x8E, 0xC0, 0x30, 0xF1, 0x18, 0xBD, 0x80, 0xC0, 0xBD, 0x8C,
  0xC0, 0x60, 0x00, 0x7F, 0xFF, 0x20, 0x8F, 0xCC, 0xBD, 0x83, 0xC0, 0xBD,
  0x87, 0xC0, 0x60, 0xA2, 0x60, 0x60, 0x24, 0xEA, 0x60, 0xA9, 0x80, 0xD0,
  0x05, 0x24, 0x41, 0xEA, 0xC5, 0xEA, 0x9D, 0x8D, 0xC0, 0xDD, 0x8C, 0xC0,
  0x45, 0x40, 0x85, 0x40, 0x60, 0xA9, 0x05, 0xA0, 0x00, 0x20, 0xCC, 0xCC,
  0x90, 0x05, 0xA9, 0x80, 0x20, 0x7F, 0xCD, 0x60, 0x20, 0xCC, 0xCC, 0x90,
  0xFA, 0xA9, 0x80, 0x20, 0x7F, 0xCD, 0xAD, 0xF8, 0x06, 0x85, 0x4D, 0xAD,
  0x78, 0x07, 0x85, 0x4E, 0xA9, 0xB8, 0xA0, 0x0B, 0xA6, 0x58, 0x9D, 0xF3,
  0x04, 0x98, 0x9D, 0x73, 0x05, 0xA5, 0x4D, 0x8D, 0xF8, 0x06, 0xA5, 0x4E,
  0x8D, 0x78, 0x07, 0x20, 0xFF, 0xCA, 0xAD, 0xF8, 0x06, 0x85, 0x4D, 0xAD,
  0x78, 0x07, 0x85, 0x4E, 0x90, 0x0C, 0xA6, 0x58, 0xDE, 0xF3, 0x04, 0xD0,
  0xE0, 0xDE, 0x73, 0x05, 0x10, 0xDB, 0x60, 0xA4, 0x58, 0xA9, 0x05, 0x99,
  0xF3, 0x04, 0x20, 0x04, 0xC9, 0x90, 0x0F, 0xA0, 0x01, 0x20, 0x72, 0xCD,
  0x20, 0x70, 0xCC, 0xA6, 0x58, 0xDE, 0xF3, 0x04, 0xD0, 0xEC, 0x60, 0x20,
  0x8F, 0xCC, 0xBD, 0x80, 0xC0, 0xBD, 0x82, 0xC0, 0xBD, 0x84, 0xC0, 0xBD,
  0x86, 0xC0, 0x60, 0xAD, 0xEA, 0xC0, 0xAD, 0xE9, 0xC0, 0xAD, 0xEC, 0xC0,
  0x48, 0xA9, 0x8C, 0xE9, 0x01, 0xD0, 0xFC, 0x68, 0x60, 0xA5, 0x4B, 0xA8,
  0xA2, 0x00, 0x86, 0x4B, 0xA2, 0x03, 0x0A, 0x26, 0x4B, 0xCA, 0xD0, 0xFA,
  0x18, 0x65, 0x4C, 0x90, 0x02, 0xE6, 0x4B, 0x84, 0x4C, 0x38, 0xE5, 0x4C,
  0xB0, 0x02, 0xC6, 0x4B, 0xA4, 0x4B, 0x60, 0x20, 0x1B, 0xCD, 0xBD, 0x81,
  0xC0, 0xBD, 0x85, 0xC0, 0xA0, 0x50, 0x20, 0x72, 0xCD, 0x20, 0x1B, 0xCD,
  0xA0, 0x0A, 0x20, 0x79, 0xCD, 0x88, 0xD0, 0xFA, 0x60, 0xA2, 0xC8, 0xCA,
  0xD0, 0xFD, 0x60, 0x48, 0x20, 0x5F, 0xCD, 0x68, 0xAA, 0xA5, 0x42, 0x48,
  0xA5, 0x43, 0x48, 0xA5, 0x46, 0x48, 0x86, 0x46, 0xA9, 0x05, 0x85, 0x42,
  0xA9, 0x00, 0x85, 0x55, 0x85, 0x5A, 0xA9, 0x02, 0x85, 0x43, 0xA9, 0x42,
  0x85, 0x54, 0xA9, 0x80, 0x85, 0x5B, 0x20, 0x1B, 0xCD, 0xE6, 0x5A, 0xA9,
  0x09, 0x85, 0x4D, 0xA9, 0x00, 0x85, 0x4E, 0x20, 0xFF, 0xCA, 0x90, 0x05,
  0xC6, 0x5A, 0x4C, 0xC4, 0xCD, 0x20, 0x04, 0xC9, 0xA5, 0x4D, 0xF0, 0xE5,
  0xA5, 0x5A, 0xA4, 0x58, 0x99, 0xF9, 0x06, 0x68, 0x85, 0x46, 0x68, 0x85,
  0x43, 0x68, 0x85, 0x42, 0x60, 0xA6, 0x58, 0x9D, 0xF3, 0x05, 0x98, 0x9D,
  0x73, 0x06, 0x60, 0x90, 0x03, 0x4C, 0x1F, 0xC5, 0xAD, 0x78, 0x04, 0x29,
  0xBF, 0x8D, 0x78, 0x04, 0xD8, 0x8A, 0xA8, 0xB9, 0x73, 0x04, 0x30, 0x11,
  0x68, 0x99, 0xF3, 0x05, 0x18, 0x69, 0x03, 0xAA, 0x68, 0x99, 0x73, 0x06,
  0x69, 0x00, 0x48, 0x8A, 0x48, 0x20, 0x2B, 0xCD, 0x08, 0x78, 0xA2, 0x1B,
  0xB5, 0x40, 0x48, 0xCA, 0x10, 0xFA, 0x84, 0x58, 0xA5, 0x43, 0x2A, 0x08,
  0x2A, 0x2A, 0x28, 0x2A, 0x29, 0x03, 0x49, 0x02, 0xC0, 0x04, 0xB0, 0x02,
  0x49, 0x02, 0xAA, 0xE8, 0x86, 0x43, 0xB9, 0x73, 0x04, 0x10, 0x03, 0x4C,
  0xCA, 0xCE, 0xB9, 0xF3, 0x05, 0x85, 0x54, 0xB9, 0x73, 0x06, 0x85, 0x55,
  0xA0, 0x01, 0xB1, 0x54, 0x85, 0x42, 0xC8, 0xB1, 0x54, 0xAA, 0xC8, 0xB1,
  0x54, 0x85, 0x55, 0x86, 0x54, 0xA9, 0x01, 0xA6, 0x42, 0xE0, 0x0A, 0x90,
  0x03, 0x4C, 0xA1, 0xCF, 0xA0, 0x00, 0xB1, 0x54, 0x85, 0x5A, 0xA0, 0x08,
  0xB1, 0x54, 0x99, 0x42, 0x00, 0x88, 0xD0, 0xF8, 0xA5, 0x43, 0xD0, 0x5E,
  0xA6, 0x42, 0xBD, 0xE1, 0xC5, 0x29, 0x7F, 0xA8, 0xA9, 0x04, 0xC4, 0x5A,
  0xD0, 0xDB, 0xE0, 0x05, 0xD0, 0x0A, 0xA9, 0x00, 0x20, 0x7F, 0xCD, 0xA9,
  0x00, 0x4C, 0xC3, 0xCF, 0x8A, 0xD0, 0x24, 0xA9, 0x21, 0xA6, 0x46, 0xD0,
  0xC4, 0x8A, 0xA6, 0x58, 0xA0, 0x07, 0x91, 0x44, 0x88, 0xD0, 0xFB, 0xBD,
  0xF9, 0x06, 0x91, 0x44, 0xC8, 0xAD, 0xF9, 0x04, 0x91, 0x44, 0xA9, 0x08,
  0x88, 0x20, 0xD5, 0xCD, 0x4C, 0x83, 0xCE, 0xC9, 0x04, 0xD0, 0x0B, 0xA6,
  0x46, 0xF0, 0x0B, 0xCA, 0xF0, 0x0D, 0xA9, 0x21, 0xD0, 0x97, 0xA9, 0x11,
  0xD0, 0x93, 0xA9, 0xC0, 0x8D, 0xF9, 0x05, 0x4C, 0x83, 0xCE, 0xA9, 0x28,
  0xA4, 0x58, 0xBE, 0xF9, 0x06, 0xE4, 0x43, 0x90, 0xE7, 0xA9, 0x09, 0x85,
  0x4D, 0xA9, 0x00, 0x85, 0x4E, 0x85, 0x55, 0xA9, 0x42, 0x85, 0x54, 0xA6,
  0x58, 0xBD, 0x73, 0x04, 0x10, 0x13, 0xA6, 0x42, 0xBD, 0xE1, 0xC5, 0x29,
  0x7F, 0x85, 0x5A, 0xA9, 0x00, 0x85, 0x48, 0xA5, 0x42, 0xD0, 0x02, 0x85,
  0x46, 0xA5, 0x5A, 0xA6, 0x43, 0x86, 0x5A, 0x85, 0x43, 0xA9, 0x80, 0x85,
  0x5B, 0x20, 0x1B, 0xCD, 0x20, 0xB8, 0xCC, 0xB0, 0x46, 0xA5, 0x44, 0x85,
  0x54, 0xA5, 0x45, 0x85, 0x55, 0xA6, 0x42, 0xBD, 0xE1, 0xC5, 0x10, 0x3B,
  0xE0, 0x04, 0xD0, 0x18, 0xA0, 0x01, 0xB1, 0x54, 0xAA, 0x88, 0xB1, 0x54,
  0x48, 0x18, 0xA9, 0x02, 0x65, 0x54, 0x85, 0x54, 0x68, 0x90, 0x13, 0xE6,
  0x55, 0x4C, 0x4A, 0xCF, 0xE0, 0x02, 0xD0, 0x06, 0xA9, 0x00, 0xA2, 0x02,
  0xD0, 0x04, 0xA6, 0x47, 0xA5, 0x46, 0x86, 0x4E, 0x85, 0x4D, 0xA9, 0x82,
  0x85, 0x5B, 0x20, 0xA9, 0xCC, 0x90, 0x04, 0xA9, 0x06, 0xD0, 0x46, 0xA4,
  0x58, 0xB9, 0x73, 0x04, 0x10, 0x0C, 0xA5, 0x42, 0xD0, 0x08, 0xA9, 0x45,
  0xA2, 0x00, 0x85, 0x54, 0x86, 0x55, 0x20, 0xFF, 0xCC, 0xB0, 0xE4, 0x20,
  0x3D, 0xCD, 0x20, 0xD5, 0xCD, 0xA5, 0x42, 0xD0, 0x22, 0xA6, 0x58, 0xBD,
  0x73, 0x04, 0x10, 0x1B, 0xA5, 0x46, 0x9D, 0xF3, 0x05, 0xA5, 0x47, 0x9D,
  0x73, 0x06, 0xA5, 0x45, 0x4A, 0x4A, 0x4A, 0x90, 0x04, 0xA9, 0x2B, 0xD0,
  0x08, 0x4A, 0x4A, 0xA9, 0x2F, 0x90, 0x02, 0xA5, 0x4D, 0xA4, 0x58, 0x99,
  0xF3, 0x04, 0xAA, 0xF0, 0x1A, 0xBE, 0x73, 0x04, 0x10, 0x15, 0xA2, 0x00,
  0xC9, 0x40, 0xB0, 0x0E, 0xA2, 0x27, 0xC9, 0x2B, 0xF0, 0x09, 0xC9, 0x28,
  0xF0, 0x05, 0xC9, 0x2F, 0xF0, 0x01, 0x8A, 0xA4, 0x58, 0x99, 0x73, 0x05,
  0xAD, 0xE8, 0xC0, 0xAD, 0xE2, 0xC0, 0xAD, 0xE6, 0xC0, 0xA2, 0x00, 0x68,
  0x95, 0x40, 0xE8, 0xE0, 0x1C, 0x90, 0xF8, 0x28, 0xB9, 0xF3, 0x05, 0xAA,
  0xB9, 0x73, 0x05, 0x48, 0xB9, 0x73, 0x06, 0xA8, 0x18, 0x68, 0xF0, 0x01,
  0x38, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

void setup() {
  // put your setup code here, to run once:
  pinMode(SHIFT_DATA, OUTPUT);
  pinMode(SHIFT_CLK, OUTPUT);
  pinMode(SHIFT_LATCH, OUTPUT);
  digitalWrite(WRITE_EN, HIGH);
  pinMode(WRITE_EN, OUTPUT);
  Serial.begin(57600);

  // Erase entire EEPROM
  Serial.print("Erasing EEPROM");
  for (int address = 0; address <= 2047; address += 1) {
    writeEEPROM(address, 0xff);

    if (address % 64 == 0) {
      Serial.print(".");
    }
  }
  Serial.println(" done");


  // Program data bytes
  Serial.print("Programming EEPROM");
  for (int address = 0; address < sizeof(data); address += 1) {
    writeEEPROM(address, data[address]);

    if (address % 64 == 0) {
      Serial.print(".");
    }
  }
  Serial.println(" done");


  // Read and print out the contents of the EERPROM
  Serial.println("Reading EEPROM");
  printContents();
}


void loop() {
  // put your main code here, to run repeatedly:

}
